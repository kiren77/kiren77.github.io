{"version":3,"sources":["#2Component.js","App.js","reportWebVitals.js","index.js"],"names":["RandomJoke","more","loadMore","useState","joke","setJoke","componentIsMounted","useRef","useEffect","current","cancelTokenSource","CancelToken","source","a","axios","cancelToken","token","asyncResponse","value","data","isCancel","console","info","error","fetchJoke","cancel","onClick","App","className","id","src","alt","displaytext","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAIe,SAASA,EAAT,GAAyC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAAY,EAC7BC,mBAAS,IADoB,mBAC9CC,EAD8C,KACxCC,EADwC,KAE/CC,EAAqBC,kBAAO,GA4ClC,OA1CAC,qBAAU,WAER,OAAO,WACLF,EAAmBG,SAAU,KAE9B,IAEHD,qBAAU,WACR,IAAME,EAAoBC,cAAYC,SADxB,4CAGd,8BAAAC,EAAA,+EAEgCC,IAC1B,qCACA,CACEC,YAAaL,EAAkBM,QALvC,OAEUC,EAFV,OAQYC,EAAUD,EAAcE,KAAxBD,MAEJZ,EAAmBG,SACrBJ,EAAQa,EAAMd,MAXpB,oDAcQU,IAAMM,SAAN,MAdR,0CAeaC,QAAQC,KAAR,OAfb,QAkBID,QAAQE,MAAR,MAlBJ,0DAHc,sBA2Bd,OA3Bc,mCAyBdC,GAEO,WAELd,EAAkBe,OAChB,mEAGH,CAACxB,IAGF,gCACE,oDACA,wCAASG,EAAT,OACA,wBAAQsB,QAASxB,EAAjB,wBCbSyB,MA1Bf,WAOE,OAEE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACN,qBAAKC,GAAG,cAAcC,IAAI,wJAAuJF,UAAU,WAAWG,IAAI,SADpM,WAQM,cAAC,EAAD,CAAiBC,YAAY,gCCrB1BC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1Bb,K","file":"static/js/main.7e7a0011.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";import './App.scss';\n\nimport axios, { CancelToken } from \"axios\";\n\nexport default function RandomJoke({ more, loadMore }) {\n  const [joke, setJoke] = useState(\"\");\n  const componentIsMounted = useRef(true);\n\n  useEffect(() => {\n    // each useEffect can return a cleanup function\n    return () => {\n      componentIsMounted.current = false;\n    };\n  }, []); // no extra deps => the cleanup function run this on component unmount\n\n  useEffect(() => {\n    const cancelTokenSource = CancelToken.source();\n\n    async function fetchJoke() {\n      try {\n        const asyncResponse = await axios(\n          \"https://api.icndb.com/jokes/random\",\n          {\n            cancelToken: cancelTokenSource.token,\n          }\n        );\n        const { value } = asyncResponse.data;\n\n        if (componentIsMounted.current) {\n          setJoke(value.joke);\n        }\n      } catch (err) {\n        if (axios.isCancel(err)) {\n          return console.info(err);\n        }\n\n        console.error(err);\n      }\n    }\n\n    fetchJoke();\n\n    return () => {\n      // here we cancel preveous http request that did not complete yet\n      cancelTokenSource.cancel(\n        \"Cancelling previous http call because a new one was made ;-)\"\n      );\n    };\n  }, [more]);\n\n  return (\n    <div>\n      <h1>Chuck Norris Fact:</h1>\n      <h2>{`\"${joke}\"`}</h2>\n      <button onClick={loadMore}>More...</button>\n    </div>\n  );\n}\n","//import logo from \"./logo.svg\"; React logo\nimport \"./App.scss\";\n\n//for API stuff\nimport Axios from 'axios'\n\n\n/*1 FirstComponent needs to be imported into App Component,\n which is done in the line import FirstComponent from ‘./FirstComponent’ */\n/*  import FirstComponent from './#1Component';\n */ import SecondComponent from './#2Component';\n/*  import DNDComponent from './DNDComponent';\n */\n\n\nfunction App() {\n  \n  const getJoke = () => {\n    Axios.get()\n  }\n  \n  \n  return (\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n<img id=\"chucknorris\" src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.pinimg.com%2Foriginals%2F37%2F24%2F21%2F372421ca5408550f7d22b9e980c75f97.jpg&f=1&nofb=1\"className=\"App-logo\" alt=\"logo\"/>        \n       \n       \n       {/*  <p >Here's a Darth Vader claim:</p> */}\n       \n\n{/*         <FirstComponent displaytext=\"First Component Data\"/>\n */}        <SecondComponent displaytext=\"Second Component Data\"/>\n{/*         <DNDComponent displaytext=\"DND Component Data\"/>\n */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}