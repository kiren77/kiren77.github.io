{"version":3,"sources":["allJavascript/revealShuffledHexNumbers.js"],"names":["tileType","hnURL","n2","n3_1","n3_2","n4_1","n4_2","n5_1","n5_2","n6_1","n6_2","n8_1","n8_2","n9_1","n9_2","n10_1","n10_2","n11_1","n11_2","n12","desertNull","hexNumberArray","hexLetterPlaceholders","hexLetter","hexId","hexInit","called","shuffleOnNumClick","tileInit","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","temporaryValue","mergedRowNum","mergedArrsNum","index","Object","assign","forEach","push","revealShuffledTiles","id","document","getElementById","style","visibility","console","table","log","x","thisHexId","thishnURL","hexId1","hexId2","hexId3","hexId4","hexId5","hexId6","hexId7","hexId8","hexId9","hexId10","hexId11","hexId12","hexId13","hexId14","hexId15","hexId16","hexId17","hexId18","hexId19","sizeOfCoin","background","backgroundSize"],"mappings":"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","file":"revealShuffledHexNumbers.fd48da88.js","sourceRoot":"../src","sourcesContent":["\n\n\nvar tileType, hnURL;\n/*  sheepTile1, sheepTile2, sheepTile3, sheepTile4, woodTile1, woodTile2, woodTile3, woodTile4, wheatTile1, wheatTile2, wheatTile3, wheatTile4, oreTile1, oreTile2, oreTile3, brickTile1, brickTile2, brickTile3, desertTile1;\n */\n\n\n/*   let sT1, sT2, sT3, sT4, woT1, woT2, woT3, woT4, whT1,whT2, whT3, whT4, oT1, oT2, oT3, bT1, bT2, bT3, dT1; \n */\n\n\n// tileType are the variables representing the tiles, and unique Tile is the index for each paired #id.backgroundimage\n\n//each variable of the same \n//type is associated with \n// corresponding /\"asset\"1.png\nvar n2         =    'gameAssetsOfficial/n2.png',\n    n3_1       =  'gameAssetsOfficial/n3_1.png',\n    n3_2       =  'gameAssetsOfficial/n3_2.png',\n    n4_1       =  'gameAssetsOfficial/n4_1.png',\n    n4_2       =  'gameAssetsOfficial/n4_2.png',\n    n5_1       =  'gameAssetsOfficial/n5_1.png',\n    n5_2       =  'gameAssetsOfficial/n5_2.png',\n    n6_1       =  'gameAssetsOfficial/n6_1.png',\n    n6_2       =  'gameAssetsOfficial/n6_2.png',\n    n8_1       =  'gameAssetsOfficial/n8_1.png',\n    n8_2       =  'gameAssetsOfficial/n8_2.png',\n    n9_1       =  'gameAssetsOfficial/n9_1.png',\n    n9_2       =  'gameAssetsOfficial/n9_2.png',\n    n10_1      = 'gameAssetsOfficial/n10_1.png',\n    n10_2      = 'gameAssetsOfficial/n10_2.png',\n    n11_1      = 'gameAssetsOfficial/n11_1.png',\n    n11_2      = 'gameAssetsOfficial/n11_2.png',\n    n12        = 'gameAssetsOfficial/n12.png',\n    desertNull = null;\n\n\n\n\n\n\n\nconst hexNumberArray = [\n    {hnURL: n2         },\n    {hnURL: n3_1       },\n    {hnURL: n3_2       },\n    {hnURL: n4_1       },\n    {hnURL: n4_2       },\n    {hnURL: n5_1       },\n    {hnURL: n5_2       },\n    {hnURL: n6_1       },\n    {hnURL: n6_2       },\n    {hnURL: n8_1       },\n    {hnURL: n8_2       },\n    {hnURL: n9_1       },\n    {hnURL: n9_2       },\n    {hnURL: n10_1      },\n    {hnURL: n10_2      },\n    {hnURL: n11_1      },\n    {hnURL: n11_2      },\n    {hnURL: n12        },\n    {hnURL: desertNull }\n];\n\n\n//before shuffling the numbers we need to pair up desertNull\n// with the actual desertTile from revealShuffledTiles \n\n const hexLetterPlaceholders = [\n    {hexLetter : \"A\",        hexId : \"nA\"},\n    {hexLetter : \"B\",        hexId : \"nB\"},\n    {hexLetter : \"C\",        hexId : \"nC\"},\n    {hexLetter : \"D\",        hexId : \"nD\"},\n    {hexLetter : \"E\",        hexId : \"nE\"},\n    {hexLetter : \"F\",        hexId : \"nF\"},\n    {hexLetter : \"G\",        hexId : \"nG\"},\n    {hexLetter : \"H\",        hexId : \"nH\"},\n    {hexLetter : \"I\",        hexId : \"nI\"},\n    {hexLetter : \"J\",        hexId : \"nJ\"},\n    {hexLetter : \"K\",        hexId : \"nK\"},\n    {hexLetter : \"L\",        hexId : \"nL\"},\n    {hexLetter : \"M\",        hexId : \"nM\"},\n    {hexLetter : \"N\",        hexId : \"nN\"},\n    {hexLetter : \"O\",        hexId : \"nO\"},\n    {hexLetter : \"P\",        hexId : \"nP\"},\n    {hexLetter : \"Q\",        hexId : \"nQ\"},\n    {hexLetter : \"R\",        hexId : \"nR\"},\n    {hexLetter : \"S\",        hexId : \"nS\"}\n];\n\n/*\n//this function will generate the idTile[x]\n// value located alongside the hexLetter value for\n// each array item \nfunction defineId(letterAtoS) {\n// if this function has been fed a letter between \n// A to S it will concatenate a string\nconst str1 = 'document.getElementById(\"path#idTile'+letterAtoS+'\"'+')'\nreturn str1;\n}\n\nfor (const hexLetter in hexLetterPlaceholders) {\n  if (Object.hasOwnProperty.call(object, key)) {\n    const element = object[key];\n    \n  }\n}\n*/\nfunction hexInit() {\n  return hexInit.called = true;\n} \n\nfunction shuffleOnNumClick() {\n\n  hexInit();\n  \n  if(tileInit.called) {\n    \n\n\n/* shuffleOnClick first performs logic using:\n1) function shuffle(array)\nafter it's definition with \"array\" parameter\nwe instantiate the function with the argument \n\"hexLetterPlaceholders\" which shuffles the array items\n'hexLetter' and 'hexId'.\n(we only shuffle hex ArrPlaceholders, no need to also\n  shuffle hexNumberArray)\n\n2) \n\n*/\n\n\n\n//defining the shuffle() function \n// (for now it simply changes with every page refresh) \n//(must change on every game session)!\n\nfunction shuffle(array) {\n  var currentIndex = array.length;\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  } \n  \n\n//------Instantation of Shuffle() below -------\n\n// Used like so\n//var arr = [2, 11, 37, 42];  \n//now we shuffle this array with the function we created\nshuffle(hexLetterPlaceholders);\n\n//-------MERGING BELOW -----------\n\n//placeholder brackets for each merged rows\nvar mergedRowNum = []; \n//placeholder brackets to store final array\nvar mergedArrsNum = [];\n//for every loop we partner up  an object[index] \n//from hexLetterPlaceholders with an object from remainingTiles\nfor (let index = 0; index < hexLetterPlaceholders.length; index++) {\nmergedRowNum = Object.assign(hexLetterPlaceholders[index], hexNumberArray[index]);\nmergedArrsNum.forEach(mergedRowNum => {\n    Object.assign(hexLetterPlaceholders[index], hexNumberArray[index]);\n});\n\nmergedArrsNum.push(mergedRowNum);\n}\n\n/* console.table(mergedArrsNum);\n */\n//since mergedArrsNum is the combination\n// of the shuffled hexArr\n//at the will always return\n//console.log(mergedArrsNum[0].colorTile);\n//\n\n/* console.log(mergedArrsNum[0].colorTile);\n */\n\n\n/*  document.getElementsByTagName(\"svg\").style.fill = \"red\";\n */\n\n//now to finally paint the randomly assigned paint tiles\n/*  */\n\n\n/*  */\n \n   \n\n/*   hexLetterPlaceholders.forEach(hexId).style.backgroundImage = \"url('gameAssetsOfficial/sheep1.png')\";\n */\n\n  \n// finally we work through the shuffled array and for every index number we \n// perform this action: associate a unique tile#Id to a unique placeholder#id\n\n \n\n\n\nfunction revealShuffledTiles(id) {\n    document.getElementById(id).style.visibility = \"hidden\";\n    // hide the lorem ipsum text\n    document.getElementById(id).style.visibility = \"visible\";\n    // hide the link\n}\n\n\n\n\n/* console.table(mergedArrsNum[0]);\n */\n\n\n\n//At LAST!!! We apply the appropriate background image (which is the unique png file associated with ?)\n\n\n//EXAMPLE\n\n/* mergedArrsNum\n  {tileType: brickTile2, hnURL: \"url('gameAssetsOfficial/brick2.png')\",      }\n\n    {hexLetter : \"E\",        hexId : 'document.getElementById(\"tp_E\")}'  */\n\n\n/* For each tile placeholder \"tp_x\" we associate it with the background picture \nvalue from it's paired shuffled value */\n\n\n\nconsole.table(mergedArrsNum[4].hnURL);\n\n console.log(mergedArrsNum[4].hexId);\n  \n\n\n\n/* \nvar images = ['../images/ploutarxos.jpg',\n  '../images/xatzigiannhs.jpg',\n  '../images/taylor_swift.jpg',\n  '../images/selena_gomez.jpg',\n  '../images/the_weeknd.jpg',\n  '../images/drake.jpg'\n];\n\nvar img = document.getElementById(\"img\");\n\nfunction displayImage(x) {\n  img.style.backgroundImage = \"url(\" + images[x] + \")\";\n  img.innerText = images[x];\n}\nfunction startTimer() {\n  var x = 0;\n  displayImage(x);\n  setInterval(function() {\n    x = x + 1 >= images.length ? 0 : x + 1;\n    displayImage(x);\n  }, 3000);\n} */\n/* \nlet tileAssets = document.querySelectorAll(\".tilePlaceholder\")\ntileAssets.forEach(tileAsset => {\n  console.log('tileAsset: ', tileAsset);\n});\n\narray.forEach(element => {\n  \n}); */\n\n\n\n// for all 19 array rows in the mergedArrsNum we are associating hexId bg \n//styling properties to the hnURL\n\n\n\n\nfor (let x = 0; x < 19/* mergedArrsNum.length */; x++) {\n\n\nlet thisHexId = mergedArrsNum[x].hexId;\nlet thishnURL= mergedArrsNum[x].hexId;\n/* let thisBackground = thisHexId.setAttribute(\"background\", thishnURL)\n */}\n// Something to keep in mind when doing DOM manipulation\n/* I need to fix the hexId array as I now trimmed \nthe getelementbyid(\" \") surrounding text, leaving\nme with just \"element\" with quotation marks.\n)\n*/\n//TO-DO: replace redundancy with \"For\" loops\n//where the script generates would generate the key value pairs\n\nvar hexId1  = mergedArrsNum[0].hexId;\nvar hexId2  = mergedArrsNum[1].hexId;\nvar hexId3  = mergedArrsNum[2].hexId;\nvar hexId4  = mergedArrsNum[3].hexId;\nvar hexId5  = mergedArrsNum[4].hexId;\nvar hexId6  = mergedArrsNum[5].hexId;\nvar hexId7  = mergedArrsNum[6].hexId;\nvar hexId8  = mergedArrsNum[7].hexId;\nvar hexId9  = mergedArrsNum[8].hexId;\nvar hexId10 = mergedArrsNum[9].hexId;\nvar hexId11 = mergedArrsNum[10].hexId;\nvar hexId12 = mergedArrsNum[11].hexId;\nvar hexId13 = mergedArrsNum[12].hexId;\nvar hexId14 = mergedArrsNum[13].hexId;\nvar hexId15 = mergedArrsNum[14].hexId;\nvar hexId16 = mergedArrsNum[15].hexId;\nvar hexId17 = mergedArrsNum[16].hexId;\nvar hexId18 = mergedArrsNum[17].hexId;\nvar hexId19 = mergedArrsNum[18].hexId;\n\nconsole.log(mergedArrsNum);\n\n\nvar sizeOfCoin = \"39px 39px\";\n\n  document.getElementById(hexId1).style.background =   \"url('\"  +  mergedArrsNum[0].hnURL  +    \"')\";\n  document.getElementById(hexId1).style.backgroundSize = sizeOfCoin;\n  document.getElementById(hexId2).style.background =   \"url('\"  +  mergedArrsNum[1].hnURL  +    \"')\";\n  document.getElementById(hexId2).style.backgroundSize = sizeOfCoin;\n  document.getElementById(hexId3).style.background =   \"url('\"  +  mergedArrsNum[2].hnURL  +    \"')\"; \n  document.getElementById(hexId3).style.backgroundSize = sizeOfCoin;\n  document.getElementById(hexId4).style.background =   \"url('\"  +  mergedArrsNum[3].hnURL  +    \"')\"; \n  document.getElementById(hexId4).style.backgroundSize = sizeOfCoin;\n  document.getElementById(hexId5).style.background =   \"url('\"  +  mergedArrsNum[4].hnURL  +    \"')\"; \n  document.getElementById(hexId5).style.backgroundSize = sizeOfCoin;\n  document.getElementById(hexId6).style.background =   \"url('\"  +  mergedArrsNum[5].hnURL  +    \"')\"; \n  document.getElementById(hexId6).style.backgroundSize = sizeOfCoin;\n  document.getElementById(hexId7).style.background =   \"url('\"  +  mergedArrsNum[6].hnURL  +    \"')\"; \n  document.getElementById(hexId7).style.backgroundSize = sizeOfCoin;\n  document.getElementById(hexId8).style.background =   \"url('\"  +  mergedArrsNum[7].hnURL  +    \"')\"; \n  document.getElementById(hexId8).style.backgroundSize = sizeOfCoin;\n  document.getElementById(hexId9).style.background =   \"url('\"  +  mergedArrsNum[8].hnURL  +    \"')\"; \n  document.getElementById(hexId9).style.backgroundSize = sizeOfCoin;\n  document.getElementById(hexId10).style.background =  \"url('\"  +  mergedArrsNum[9].hnURL  +    \"')\";\n  document.getElementById(hexId10).style.backgroundSize = sizeOfCoin;\n  document.getElementById(hexId11).style.background =  \"url('\"  +  mergedArrsNum[10].hnURL  +    \"')\";\n  document.getElementById(hexId11).style.backgroundSize = sizeOfCoin;\n  document.getElementById(hexId12).style.background =  \"url('\"  +  mergedArrsNum[11].hnURL  +    \"')\";\n  document.getElementById(hexId12).style.backgroundSize = sizeOfCoin;\n  document.getElementById(hexId13).style.background =  \"url('\"  +  mergedArrsNum[12].hnURL  +    \"')\";\n  document.getElementById(hexId13).style.backgroundSize = sizeOfCoin;\n  document.getElementById(hexId14).style.background =  \"url('\"  +  mergedArrsNum[13].hnURL  +    \"')\";\n  document.getElementById(hexId14).style.backgroundSize = sizeOfCoin;\n  document.getElementById(hexId15).style.background =  \"url('\"  +  mergedArrsNum[14].hnURL  +    \"')\";\n  document.getElementById(hexId15).style.backgroundSize = sizeOfCoin;\n  document.getElementById(hexId16).style.background =  \"url('\"  +  mergedArrsNum[15].hnURL  +    \"')\";\n  document.getElementById(hexId16).style.backgroundSize = sizeOfCoin;\n  document.getElementById(hexId17).style.background =  \"url('\"  +  mergedArrsNum[16].hnURL  +    \"')\";\n  document.getElementById(hexId17).style.backgroundSize = sizeOfCoin;\n  document.getElementById(hexId18).style.background =  \"url('\"  +  mergedArrsNum[17].hnURL  +    \"')\";\n  document.getElementById(hexId18).style.backgroundSize = sizeOfCoin;\n  document.getElementById(hexId19).style.background =  \"url('\"  +  mergedArrsNum[18].hnURL  +    \"')\";\n  document.getElementById(hexId19).style.backgroundSize = sizeOfCoin;\n\n\n  \nreturn hexId1, hexId2, hexId3, hexId4, hexId5, hexId6, hexId7, hexId8, hexId9, hexId10, hexId11, hexId12, hexId13, hexId14, hexId15, hexId16, hexId17, hexId18, hexId19;\n\n   } /* end tileInit() */\n   else {\n     console.log(\"you have to shuffle the tiles first!\")\n   }\n\n } \n\n\n\n\n /* \n if (hexId1) {\n  console.log(\"hexId1's image is loaded\")  }\n  */"]}