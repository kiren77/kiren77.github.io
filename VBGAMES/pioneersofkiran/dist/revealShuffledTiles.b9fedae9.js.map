{"version":3,"sources":["allJavascript/revealShuffledTiles.js"],"names":["tileType","tileURL","sheep1","sheep2","sheep3","sheep4","wood1","wood2","wood3","wood4","wheat1","wheat2","wheat3","wheat4","ore1","ore2","ore3","brick1","brick2","brick3","desert1","remainingTilesNew","hexArrPlaceholders","hexLetter","hexId","tileInit","called","shuffleOnClick","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","temporaryValue","mergedRow","mergedArrs","index","Object","assign","forEach","push","revealShuffledTiles","id","document","getElementById","style","visibility","x","thisHexId","thisTileURL","hexId1","hexId2","hexId3","hexId4","hexId5","hexId6","hexId7","hexId8","hexId9","hexId10","hexId11","hexId12","hexId13","hexId14","hexId15","hexId16","hexId17","hexId18","hexId19","console","log","background"],"mappings":"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","file":"revealShuffledTiles.b9fedae9.js","sourceRoot":"../src","sourcesContent":["\nvar tileType, tileURL;\n\n\n//each variable of the same \n//type is associated with \n// corresponding /\"asset\"1.png\nvar sheep1  = 'gameAssetsOfficial/sheep1.png';\nvar sheep2  = 'gameAssetsOfficial/sheep1.png';\nvar sheep3  = 'gameAssetsOfficial/sheep1.png';\nvar sheep4  = 'gameAssetsOfficial/sheep1.png';\nvar wood1   = 'gameAssetsOfficial/wood1.png';\nvar wood2   = 'gameAssetsOfficial/wood1.png';\nvar wood3   = 'gameAssetsOfficial/wood1.png';\nvar wood4   = 'gameAssetsOfficial/wood1.png';\nvar wheat1  = 'gameAssetsOfficial/wheat1.png';\nvar wheat2  = 'gameAssetsOfficial/wheat1.png';\nvar wheat3  = 'gameAssetsOfficial/wheat1.png';\nvar wheat4  = 'gameAssetsOfficial/wheat1.png';\nvar ore1    = 'gameAssetsOfficial/ore1.png';\nvar ore2    = 'gameAssetsOfficial/ore1.png';\nvar ore3    = 'gameAssetsOfficial/ore1.png';\nvar brick1  = 'gameAssetsOfficial/brick1.png';\nvar brick2  = 'gameAssetsOfficial/brick1.png';\nvar brick3  = 'gameAssetsOfficial/brick1.png';\nvar desert1 = 'gameAssetsOfficial/desert1.png';\n\n\n\n\n\nconst remainingTilesNew = [\n    // 4 sheep tiles\n    {tileType: 'sheepTile1',       tileURL: sheep1},//sheep\n    {tileType: 'sheepTile2',       tileURL: sheep2},//sheep\n    {tileType: 'sheepTile3',       tileURL: sheep3},//sheep\n    {tileType: 'sheepTile4',       tileURL: sheep4},//sheep\n    // 4 wood t'iles\n    {tileType: 'woodTile1',        tileURL: wood1},//wood\n    {tileType: 'woodTile2',        tileURL: wood2},//wood\n    {tileType: 'woodTile3',        tileURL: wood3},//wood\n    {tileType: 'woodTile4',        tileURL: wood4},//wood\n    // 4 wheat 'tile    \n    {tileType: 'wheatTile1',       tileURL: wheat1},//wheat\n    {tileType: 'wheatTile2',       tileURL: wheat2},//wheat\n    {tileType: 'wheatTile3',       tileURL: wheat3},//wheat\n    {tileType: 'wheatTile4',       tileURL: wheat4},//wheat\n    // 3 ore ti'les     \n    {tileType: 'oreTile1',         tileURL: ore1},//ore\n    {tileType: 'oreTile2',         tileURL: ore2},//ore\n    {tileType: 'oreTile3',         tileURL: ore3},//ore\n    // 3 brick 'tile    \n    {tileType: 'brickTile1',       tileURL: brick1},//brick\n    {tileType: 'brickTile2',       tileURL: brick2},//brick\n    {tileType: 'brickTile3',       tileURL: brick3},//brick\n    // 1 desert' til\n    {tileType: 'desertTile1',      tileURL: desert1} //desert\n];\n\n const hexArrPlaceholders = [\n    {hexLetter : \"A\",        hexId : \"tp_A\"},\n    {hexLetter : \"B\",        hexId : \"tp_B\"},\n    {hexLetter : \"C\",        hexId : \"tp_C\"},\n    {hexLetter : \"D\",        hexId : \"tp_D\"},\n    {hexLetter : \"E\",        hexId : \"tp_E\"},\n    {hexLetter : \"F\",        hexId : \"tp_F\"},\n    {hexLetter : \"G\",        hexId : \"tp_G\"},\n    {hexLetter : \"H\",        hexId : \"tp_H\"},\n    {hexLetter : \"I\",        hexId : \"tp_I\"},\n    {hexLetter : \"J\",        hexId : \"tp_J\"},\n    {hexLetter : \"K\",        hexId : \"tp_K\"},\n    {hexLetter : \"L\",        hexId : \"tp_L\"},\n    {hexLetter : \"M\",        hexId : \"tp_M\"},\n    {hexLetter : \"N\",        hexId : \"tp_N\"},\n    {hexLetter : \"O\",        hexId : \"tp_O\"},\n    {hexLetter : \"P\",        hexId : \"tp_P\"},\n    {hexLetter : \"Q\",        hexId : \"tp_Q\"},\n    {hexLetter : \"R\",        hexId : \"tp_R\"},\n    {hexLetter : \"S\",        hexId : \"tp_S\"}\n];\n\n/*\n//this function will generate the idTile[x]\n// value located alongside the hexLetter value for\n// each array item \nfunction defineId(letterAtoS) {\n// if this function has been fed a letter between \n// A to S it will concatenate a string\nconst str1 = 'document.getElementById(\"path#idTile'+letterAtoS+'\"'+')'\nreturn str1;\n}\n\nfor (const hexLetter in hexArrPlaceholders) {\n  if (Object.hasOwnProperty.call(object, key)) {\n    const element = object[key];\n    \n  }\n}\n*/\n\nfunction tileInit() {\n  return tileInit.called = true;\n}\n\nfunction shuffleOnClick() {\n\n  //check that the function has been called\n  \n\n  tileInit();\n\n/* shuffleOnClick first performs logic using:\n1) function shuffle(array)\nafter it's definition with \"array\" parameter\nwe instantiate the function with the argument \n\"hexArrPlaceholders\" which shuffles the array items\n'hexLetter' and 'hexId'.\n(we only shuffle hex ArrPlaceholders, no need to also\n  shuffle remainingTilesNew)\n\n2) \n\n*/\n\n\n\n//defining the shuffle() function \n// (for now it simply changes with every page refresh) \n//(must change on every game session)!\n\nfunction shuffle(array) {\n  var currentIndex = array.length;\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  } \n  \n\n//------Instantation of Shuffle() below -------\n\n// Used like so\n//var arr = [2, 11, 37, 42];  \n//now we shuffle this array with the function we created\nshuffle(hexArrPlaceholders);\n\n//-------MERGING BELOW -----------\n\n//placeholder brackets for each merged rows\nlet mergedRow = []; \n//placeholder brackets to store final array\nlet mergedArrs = [];\n//for every loop we partner up  an object[index] \n//from hexArrPlaceholders with an object from remainingTiles\nfor (let index = 0; index < hexArrPlaceholders.length; index++) {\nmergedRow = Object.assign(hexArrPlaceholders[index], remainingTilesNew[index]);\nmergedArrs.forEach(mergedRow => {\n    Object.assign(hexArrPlaceholders[index], remainingTilesNew[index]);\n});\n\nmergedArrs.push(mergedRow);\n}\n\n/* console.table(mergedArrs);\n */\n//since mergedArrs is the combination\n// of the shuffled hexArr\n//at the will always return\n//console.log(mergedArrs[0].colorTile);\n//\n\n/* console.log(mergedArrs[0].colorTile);\n */\n\n\n/*  document.getElementsByTagName(\"svg\").style.fill = \"red\";\n */\n\n//now to finally paint the randomly assigned paint tiles\n/*  */\n\n\n/*  */\n \n   \n\n/*   hexArrPlaceholders.forEach(hexId).style.backgroundImage = \"url('gameAssetsOfficial/sheep1.png')\";\n */\n\n  \n// finally we work through the shuffled array and for every index number we \n// perform this action: associate a unique tile#Id to a unique placeholder#id\n\n \n\n\n\nfunction revealShuffledTiles(id) {\n    document.getElementById(id).style.visibility = \"hidden\";\n    // hide the lorem ipsum text\n    document.getElementById(id).style.visibility = \"visible\";\n    // hide the link\n}\n\n\n\n\n/* console.table(mergedArrs[0]);\n */\n\n\n\n//At LAST!!! We apply the appropriate background image (which is the unique png file associated with ?)\n\n\n//EXAMPLE\n\n/* mergedArrs\n  {tileType: brickTile2, tileURL: \"url('gameAssetsOfficial/brick2.png')\",      }\n\n    {hexLetter : \"E\",        hexId : 'document.getElementById(\"tp_E\")}'  */\n\n\n/* For each tile placeholder \"tp_x\" we associate it with the background picture \nvalue from it's paired shuffled value */\n\n\n\n\n\n  \n\n\n\n/* \nvar images = ['../images/ploutarxos.jpg',\n  '../images/xatzigiannhs.jpg',\n  '../images/taylor_swift.jpg',\n  '../images/selena_gomez.jpg',\n  '../images/the_weeknd.jpg',\n  '../images/drake.jpg'\n];\n\nvar img = document.getElementById(\"img\");\n\nfunction displayImage(x) {\n  img.style.backgroundImage = \"url(\" + images[x] + \")\";\n  img.innerText = images[x];\n}\nfunction startTimer() {\n  var x = 0;\n  displayImage(x);\n  setInterval(function() {\n    x = x + 1 >= images.length ? 0 : x + 1;\n    displayImage(x);\n  }, 3000);\n} */\n/* \nlet tileAssets = document.querySelectorAll(\".tilePlaceholder\")\ntileAssets.forEach(tileAsset => {\n  console.log('tileAsset: ', tileAsset);\n});\n\narray.forEach(element => {\n  \n}); */\n\n\n\n// for all 19 array rows in the mergedArrs we are associating hexId bg \n//styling properties to the tileURL\n\n\n\n\nfor (let x = 0; x < 19/* mergedArrs.length */; x++) {\n\n\nlet thisHexId = mergedArrs[x].hexId;\nlet thisTileURL= mergedArrs[x].hexId;\n/* let thisBackground = thisHexId.setAttribute(\"background\", thisTileURL)\n */}\n// Something to keep in mind when doing DOM manipulation\n/* I need to fix the hexId array as I now trimmed \nthe getelementbyid(\" \") surrounding text, leaving\nme with just \"element\" with quotation marks.\n)\n*/\n//TO-DO: replace redundancy with \"For\" loops\n//where the script generates would generate the key value pairs\n\nvar hexId1  = mergedArrs[0].hexId\nvar hexId2  = mergedArrs[1].hexId\nvar hexId3  = mergedArrs[2].hexId\nvar hexId4  = mergedArrs[3].hexId\nvar hexId5  = mergedArrs[4].hexId\nvar hexId6  = mergedArrs[5].hexId\nvar hexId7  = mergedArrs[6].hexId\nvar hexId8  = mergedArrs[7].hexId\nvar hexId9  = mergedArrs[8].hexId\nvar hexId10 = mergedArrs[9].hexId\nvar hexId11 = mergedArrs[10].hexId\nvar hexId12 = mergedArrs[11].hexId\nvar hexId13 = mergedArrs[12].hexId\nvar hexId14 = mergedArrs[13].hexId\nvar hexId15 = mergedArrs[14].hexId\nvar hexId16 = mergedArrs[15].hexId\nvar hexId17 = mergedArrs[16].hexId\nvar hexId18 = mergedArrs[17].hexId\nvar hexId19 = mergedArrs[18].hexId\n\nconsole.log(mergedArrs)\n\n\n   \n  document.getElementById(hexId1).style.background =   \"url('\"  +  mergedArrs[0].tileURL  +    \"')\";\n  //perform animation for \n  document.getElementById(hexId2).style.background =   \"url('\"  +  mergedArrs[1].tileURL  +    \"')\";\n  document.getElementById(hexId3).style.background =   \"url('\"  +  mergedArrs[2].tileURL  +    \"')\"; \n  document.getElementById(hexId4).style.background =   \"url('\"  +  mergedArrs[3].tileURL  +    \"')\"; \n  document.getElementById(hexId5).style.background =   \"url('\"  +  mergedArrs[4].tileURL  +    \"')\"; \n  document.getElementById(hexId6).style.background =   \"url('\"  +  mergedArrs[5].tileURL  +    \"')\"; \n  document.getElementById(hexId7).style.background =   \"url('\"  +  mergedArrs[6].tileURL  +    \"')\"; \n  document.getElementById(hexId8).style.background =   \"url('\"  +  mergedArrs[7].tileURL  +    \"')\"; \n  document.getElementById(hexId9).style.background =   \"url('\"  +  mergedArrs[8].tileURL  +    \"')\"; \n  document.getElementById(hexId10).style.background =  \"url('\"  +  mergedArrs[9].tileURL  +    \"')\";\n  document.getElementById(hexId11).style.background =  \"url('\"  +  mergedArrs[10].tileURL  +    \"')\";\n  document.getElementById(hexId12).style.background =  \"url('\"  +  mergedArrs[11].tileURL  +    \"')\";\n  document.getElementById(hexId13).style.background =  \"url('\"  +  mergedArrs[12].tileURL  +    \"')\";\n  document.getElementById(hexId14).style.background =  \"url('\"  +  mergedArrs[13].tileURL  +    \"')\";\n  document.getElementById(hexId15).style.background =  \"url('\"  +  mergedArrs[14].tileURL  +    \"')\";\n  document.getElementById(hexId16).style.background =  \"url('\"  +  mergedArrs[15].tileURL  +    \"')\";\n  document.getElementById(hexId17).style.background =  \"url('\"  +  mergedArrs[16].tileURL  +    \"')\";\n  document.getElementById(hexId18).style.background =  \"url('\"  +  mergedArrs[17].tileURL  +    \"')\";\n  document.getElementById(hexId19).style.background =  \"url('\"  +  mergedArrs[18].tileURL  +    \"')\";\n\n\n  \nreturn hexId1, hexId2, hexId3, hexId4, hexId5, hexId6, hexId7, hexId8, hexId9, hexId10, hexId11, hexId12, hexId13, hexId14, hexId15, hexId16, hexId17, hexId18, hexId19, mergedArrs;\n\n\n\n } \n\n\n\n /* \n if (hexId1) {\n  console.log(\"hexId1's image is loaded\")  }\n  */"]}