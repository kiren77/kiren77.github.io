{"version":3,"sources":["allJavascript/revealShuffledTradeShips.js"],"names":["shipURL","any3_1A","any3_1B","any3_1C","any3_1D","sheep_2_1","wood_2_1","wheat_2_1","brick_2_1","ore_2_1","tradeAny3_1A","tradeAny3_1B","tradeAny3_1C","tradeAny3_1D","tradeSheep2_1","tradeWood2_1","tradeWheat_1","tradeBrick2_1","tradeOre2_1","numShipArray","shipType","shipPlaceholders","shipNumber","shipId","TSInit","called","shuffleOnTSClick","hexInit","tileInit","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","temporaryValue","mergedRowShip","mergedArrsShip","index","Object","assign","forEach","push","revealShuffledTiles","id","document","getElementById","style","visibility","console","table","log","x","thisShipId","thisshipURL","shipId1","shipId2","shipId3","shipId4","shipId5","shipId6","shipId7","shipId8","shipId9","background","logHTML","getElementsByTagName","write"],"mappings":"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","file":"revealShuffledTradeShips.aaa34bc5.js","sourceRoot":"../src","sourcesContent":["\nvar shipURL;\n/*  sheepTile1, sheepTile2, sheepTile3, sheepTile4, woodTile1, woodTile2, woodTile3, woodTile4, wheatTile1, wheatTile2, wheatTile3, wheatTile4, oreTile1, oreTile2, oreTile3, brickTile1, brickTile2, brickTile3, desertTile1;\n */\n\n\n/*   let sT1, sT2, sT3, sT4, woT1, woT2, woT3, woT4, whT1,whT2, whT3, whT4, oT1, oT2, oT3, bT1, bT2, bT3, dT1; \n */\n\n\n\n//each variable of the same \n//type is associated with \n// corresponding /\"asset\"1.png\n//tradeship asset values\nvar any3_1A   = 'gameAssetsOfficial/any3_1A.png'   ;\nvar any3_1B   = 'gameAssetsOfficial/any3_1B.png'   ;\nvar any3_1C   = 'gameAssetsOfficial/any3_1C.png'   ;\nvar any3_1D   = 'gameAssetsOfficial/any3_1D.png'   ;\nvar sheep_2_1 = 'gameAssetsOfficial/sheep 2_1.png' ;\nvar wood_2_1  = 'gameAssetsOfficial/wood 2_1.png'  ;\nvar wheat_2_1 = 'gameAssetsOfficial/wheat 2_1.png' ;\nvar brick_2_1 = 'gameAssetsOfficial/brick 2_1.png';\nvar ore_2_1   = 'gameAssetsOfficial/ore 2_1.png'  ;\n\nlet tradeAny3_1A;\nlet tradeAny3_1B;\nlet tradeAny3_1C;\nlet tradeAny3_1D;   \nlet tradeSheep2_1; \nlet tradeWood2_1;  \nlet tradeWheat_1;  \nlet tradeBrick2_1; \nlet tradeOre2_1;  \n\nconst numShipArray = [\n    {shipURL: any3_1A   , shipType : tradeAny3_1A   },\n    {shipURL: any3_1B   , shipType : tradeAny3_1B   },\n    {shipURL: any3_1C   , shipType : tradeAny3_1C   },\n    {shipURL: any3_1D   , shipType : tradeAny3_1D   },\n    {shipURL: sheep_2_1 , shipType : tradeSheep2_1 },\n    {shipURL: wood_2_1  , shipType : tradeWood2_1  },\n    {shipURL: wheat_2_1 , shipType : tradeWheat_1  },\n    {shipURL: brick_2_1 , shipType : tradeBrick2_1 },\n    {shipURL: ore_2_1   , shipType : tradeOre2_1   }\n];\n\n const shipPlaceholders = [\n    {shipNumber : \"1\",         shipId : \"ts1\"},\n    {shipNumber : \"3\",         shipId : \"ts3\"},\n    {shipNumber : \"4\",         shipId : \"ts4\"},\n    {shipNumber : \"6\",         shipId : \"ts6\"},\n    {shipNumber : \"7\",         shipId : \"ts7\"},\n    {shipNumber : \"8\",         shipId : \"ts8\"},\n    {shipNumber : \"10\",        shipId : \"ts10\"},\n    {shipNumber : \"11\",        shipId : \"ts11\"},\n    {shipNumber : \"12\",        shipId : \"ts12\"}\n];\n\n\n/*\n//this function will generate the idTile[x]\n// value located alongside the hexLetter value for\n// each array item \nfunction defineId(letterAtoS) {\n// if this function has been fed a letter between \n// A to S it will concatenate a string\nconst str1 = 'document.getElementById(\"path#idTile'+letterAtoS+'\"'+')'\nreturn str1;\n}\n\nfor (const hexLetter in shipPlaceholders) {\n  if (Object.hasOwnProperty.call(object, key)) {\n    const element = object[key];\n    \n  }\n}\n*/\nfunction TSInit() {\n  return TSInit.called = true;\n} \n\nfunction shuffleOnTSClick() {\n\n  TSInit()\n  \n  if(hexInit.called && tileInit.called) {\n  \n//make a statement that the button has been clicked already\n\n\n\n\n/* shuffleOnClick first performs logic using:\n1) function shuffle(array)\nafter it's definition with \"array\" parameter\nwe instantiate the function with the argument \n\"shipPlaceholders\" which shuffles the array items\n'hexLetter' and 'shipId'.\n(we only shuffle hex ArrPlaceholders, no need to also\n  shuffle numShipArray)\n\n2) \n\n*/\n\n\n\n//defining the shuffle() function \n// (for now it simply changes with every page refresh) \n//(must change on every game session)!\n\nfunction shuffle(array) {\n  var currentIndex = array.length;\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  } \n  \n\n//------Instantation of Shuffle() below -------\n\n// Used like so\n//var arr = [2, 11, 37, 42];  \n//now we shuffle this array with the function we created\nshuffle(shipPlaceholders);\n\n//-------MERGING BELOW -----------\n\n//placeholder brackets for each merged rows\nvar mergedRowShip = []; \n//placeholder brackets to store final array\nvar mergedArrsShip = [];\n//for every loop we partner up  an object[index] \n//from shipPlaceholders with an object from remainingTiles\nfor (let index = 0; index < shipPlaceholders.length; index++) {\nmergedRowShip = Object.assign(shipPlaceholders[index], numShipArray[index]);\nmergedArrsShip.forEach(mergedRowShip => {\n    Object.assign(shipPlaceholders[index], numShipArray[index]);\n});\n\nmergedArrsShip.push(mergedRowShip);\n}\n\n/* console.table(mergedArrsShip);\n */\n//since mergedArrsShip is the combination\n// of the shuffled hexArr\n//at the will always return\n//console.log(mergedArrsShip[0].colorTile);\n//\n\n/* console.log(mergedArrsShip[0].colorTile);\n */\n\n\n/*  document.getElementsByTagName(\"svg\").style.fill = \"red\";\n */\n\n//now to finally paint the randomly assigned paint tiles\n/*  */\n\n\n/*  */\n \n   \n\n/*   shipPlaceholders.forEach(shipId).style.backgroundImage = \"url('gameAssetsOfficial/sheep1.png')\";\n */\n\n  \n// finally we work through the shuffled array and for every index number we \n// perform this action: associate a unique tile#Id to a unique placeholder#id\n\n \n\n\n\nfunction revealShuffledTiles(id) {\n    document.getElementById(id).style.visibility = \"hidden\";\n    // hide the lorem ipsum text\n    document.getElementById(id).style.visibility = \"visible\";\n    // hide the link\n}\n\n\n\n\n/* console.table(mergedArrsShip[0]);\n */\n\n\n\n//At LAST!!! We apply the appropriate background image (which is the unique png file associated with ?)\n\n\n//EXAMPLE\n\n/* mergedArrsShip\n  {tileType: brickTile2, shipURL: \"url('gameAssetsOfficial/brick2.png')\",      }\n\n    {hexLetter : \"E\",        shipId : 'document.getElementById(\"tp_E\")}'  */\n\n\n/* For each tile placeholder \"tp_x\" we associate it with the background picture \nvalue from it's paired shuffled value */\n\n\n\nconsole.table(mergedArrsShip[4].shipURL);\n\n console.log(mergedArrsShip[4].shipId);\n  \n\n\n\n/* \nvar images = ['../images/ploutarxos.jpg',\n  '../images/xatzigiannhs.jpg',\n  '../images/taylor_swift.jpg',\n  '../images/selena_gomez.jpg',\n  '../images/the_weeknd.jpg',\n  '../images/drake.jpg'\n];\n\nvar img = document.getElementById(\"img\");\n\nfunction displayImage(x) {\n  img.style.backgroundImage = \"url(\" + images[x] + \")\";\n  img.innerText = images[x];\n}\nfunction startTimer() {\n  var x = 0;\n  displayImage(x);\n  setInterval(function() {\n    x = x + 1 >= images.length ? 0 : x + 1;\n    displayImage(x);\n  }, 3000);\n} */\n/* \nlet tileAssets = document.querySelectorAll(\".tilePlaceholder\")\ntileAssets.forEach(tileAsset => {\n  console.log('tileAsset: ', tileAsset);\n});\n\narray.forEach(element => {\n  \n}); */\n\n\n\n// for all 19 array rows in the mergedArrsShip we are associating shipId bg \n//styling properties to the shipURL\n\n\n\n\nfor (let x = 0; x < 9/* mergedArrsShip.length */; x++) {\n\n\nlet thisShipId = mergedArrsShip[x].shipId;\nlet thisshipURL= mergedArrsShip[x].shipId;\n/* let thisBackground = thisHexId.setAttribute(\"background\", thisshipURL)\n */}\n// Something to keep in mind when doing DOM manipulation\n/* I need to fix the shipId array as I now trimmed \nthe getelementbyid(\" \") surrounding text, leaving\nme with just \"element\" with quotation marks.\n)\n*/\n//TO-DO: replace redundancy with \"For\" loops\n//where the script generates would generate the key value pairs\n\nvar shipId1  = mergedArrsShip[0].shipId;\nvar shipId2  = mergedArrsShip[1].shipId;\nvar shipId3  = mergedArrsShip[2].shipId;\nvar shipId4  = mergedArrsShip[3].shipId;\nvar shipId5  = mergedArrsShip[4].shipId;\nvar shipId6  = mergedArrsShip[5].shipId;\nvar shipId7  = mergedArrsShip[6].shipId;\nvar shipId8  = mergedArrsShip[7].shipId;\nvar shipId9  = mergedArrsShip[8].shipId;\n\nconsole.log(mergedArrsShip);\n\n\n   \n  document.getElementById(shipId1).style.background =   \"url('\"  +  mergedArrsShip[0].shipURL  +    \"')\";\n  //perform animation for \n  document.getElementById(shipId2).style.background =   \"url('\"  +  mergedArrsShip[1].shipURL  +    \"')\";\n  document.getElementById(shipId3).style.background =   \"url('\"  +  mergedArrsShip[2].shipURL  +    \"')\"; \n  document.getElementById(shipId4).style.background =   \"url('\"  +  mergedArrsShip[3].shipURL  +    \"')\"; \n  document.getElementById(shipId5).style.background =   \"url('\"  +  mergedArrsShip[4].shipURL  +    \"')\"; \n  document.getElementById(shipId6).style.background =   \"url('\"  +  mergedArrsShip[5].shipURL  +    \"')\"; \n  document.getElementById(shipId7).style.background =   \"url('\"  +  mergedArrsShip[6].shipURL  +    \"')\"; \n  document.getElementById(shipId8).style.background =   \"url('\"  +  mergedArrsShip[7].shipURL  +    \"')\"; \n  document.getElementById(shipId9).style.background =   \"url('\"  +  mergedArrsShip[8].shipURL  +    \"')\"; \n  \n  \n\n\n  \nreturn shipId1, shipId2, shipId3, shipId4, shipId5, shipId6, shipId7, shipId8, shipId9;\n\n\n\n } \n\n else {\n  console.log(\"you have to shuffle the tiles first, then the numbers!\");\nlet logHTML = document.getElementsByTagName(\"span\");\nlogHTML.write = \"you have to shuffle the tiles first, then the numbers!\";\n}\n}\n\n\n /* \n if (shipId1) {\n  console.log(\"shipId1's image is loaded\")  }\n  */"]}