{"version":3,"sources":["scss/abstracts/_mediaqueries.scss","scss/coordinates/_pawncoordinates.scss","scss/masterIslandStyle.scss"],"names":[],"mappings":";AAOqC,0BAAA;AAIrC,4BAAA;AAuBA;EAAA;AAyBE;;;;;;;;;;;;;;;;;GAAA;AAqBF;;;;;;;;;;;;;;;;;KAAA;AAmBE;;;;;;;;;;;;;;;;;;;;;;;CAAA;AC9FF;EAAA;AAoEA;EAAA;AASE;;;;;;;;GAAA;AASF;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAA;AA6BA;;;;;;;;CAAA;AAWA;;;;;;;;;;;;;;;EAAA;AAgBE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAA;AA6EF;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA;AAgCA;;;;;;;;;;;;;;;;;;;;;;;;;CAAA;AAgCE;4CAAA;AAMF;2EAAA;AAGI;;;;CAAA;AAMJ,2CAAA;AACA;;EAAA;AAEG;;;;;;kCAAA;AAaH;;;;EAAA;AAYA,KAAA;AAEA;;GAAA;AAGA,4BAAA;AC3UA;;;;EAAA;AAUA;EACE,yBAHY;;;AASd;EACE,WAAA;EACA,2BAAA;EACA,YAAA;;;AAGF;EAaE,kBAAA;EA0FA,qBAAA;EAEA;;;;;;;;uCAAA;EAUA,MAAA;EAEA;;;WAAA;;AFqOE;EE1VJ;IAoBI,YF5C2B;IE6C3B,aAAA;IACF,wEAAA;;;AFoUE;EE1VJ;IAgCI,YFrD2B;IEsD3B,aAAA;IAAe,oBAAA;IAEjB,wEAAA;;;AFuTE;EE1VJ;IA2CI,YFpDyB;IEqDzB,cAAA;IAAgB,oBAAA;IAElB,wEAAA;;;AF4SE;EE1VJ;IAsDI,aFzE0B;IE0E1B,aAAA;IAEF,wEAAA;;;AFiSE;EE1VJ;IAiEI,aFnF0B;IEoF1B,cAAA;IAEF,wEAAA;;;AAeA;EACE;;;;;;QAAA;EAQA;;;;;gDAAA;EAOA;IAAA;;;AAuBF,mBAAA;AAIF;EACI,wBAAA;;AF2NA;EE5NJ;IAKQ,yBAAA;;;AFuNJ;EE5NJ;IASQ,yBAAA;;;AFmNJ;EE5NJ;IAcQ,yBAAA;;;AF8MJ;EE5NJ;IAkBQ,yBAAA;;;AF0MJ;EE5NJ;IAsBQ,yBAAA;;;;AAKR;EACE,8DAAA;;AFgME;EEjMJ;IAKI,yBAAA;;;AF4LA;EEjMJ;IASI,yBAAA;;;AFwLA;EEjMJ;IAcI,yBAAA;;;AFmLA;EEjMJ;IAkBI,yBAAA;;;AF+KA;EEjMJ;IAsBE,yBAAA;;;;AAMF;EACE,yBAAA;EACA,kBAAA;EACA,QAAA;EACA,YAAA;EACA,aAAA;;;AAEF;;;;;;;;EAAA;AAoBA;;;;;;;;;;;;;;;;;;;;EAAA","file":"masterIslandStyle.41271327.css","sourceRoot":"../src","sourcesContent":["@use \"sass:map\";\n\n//Width\n //Portrait\n   $phone-Portrait-Width:      375px;//iphone7portraitwidth\n   $tablet-Portrait-Width:     600px;\n //Landscape\n   $phone-Landscape-Width:     667px;/* iphone7landscapewidth */\n   $M-Screen-Width :          1024px;\n   $L-Screen-Width :          1200px;//macbookwidth\n   $XL-Screen-Width:          1800px;\n/*    $fourK-Width: 4096px:*/\n\n  //Height\n//Portrait\n   $phone-Portrait-Height:   667px;//iphone7portraitheight\n//Landscape\n   $S-Screen-Height:         667px;\n   $phone-Landscape-Height:  375px;\n   $M-Screen-Width:          768px;\n   $L-Screen-Height:         800px;//macbookheight\n   $XL-Screen-Height:       1200px;\n\n\n\n\n   $windsize: (\n       phone-Portrait-Width:  $phone-Portrait-Width,\n       tablet-Portrait-Width: $tablet-Portrait-Width,\n       phone-Landscape-Width: $phone-Landscape-Width,\n       M-Screen-Width :       $M-Screen-Width,\n       L-Screen-Width :       $L-Screen-Width,\n       XL-Screen-Width:       $XL-Screen-Width\n   );\n/*    @debug map.get($windsize, \"phone-Portrait-Width\"); // 500\n */\n\n\n   @mixin respond-to($windsize_demo) {\n   @if map-has-key($windsize, $windsize_demo) {\n   @media (min-width: #{map-get($windsize, $windsize_demo)}) {\n   @content;\n   }\n   }\n   @else {\n   @warn \"There is no value retrieved from `#{$windsize_demo}`. \"\n   + \"Please check whether it is defined in `$windsize` map.\";\n   };\n   };\n   \n   $font-weights: (\"regular\": 400, \"medium\": 500, \"bold\": 700);\n   \n   @debug map.get($font-weights, \"medium\"); // 500\n   \n   @debug map.set($font-weights, \"extra-bold\", 900);\n   \n   \n\n\n  /* @mixin for-size($size) {\n    @if $size == phone-only {\n      @media (max-width: 599px) \n      { @content; }\n    } @else if $size == tablet-portrait-up {\n      @media (min-width: 600px) \n      { @content; }\n    } @else if $size == tablet-landscape-up {\n      @media (min-width: 900px) \n      { @content; }\n    } @else if $size == desktop-up {\n      @media (min-width: 1200px) \n      { @content; }\n    } @else if $size == big-desktop-up {\n      @media (min-width: 1800px) \n      { @content; }\n    }\n  } */\n\n\n//Portrait Mobile First\n/* \n   @mixin media($phone-Portrait-Width)  {\n   @media screen and (max-width: $phone-Portrait-Width) and (orientation: portrait) {\n    $oceanWidth: $phone-Portrait-Width;\n    $oceanHeight: $phone-Portrait-Height;\n    \n\n    width: $oceanWidth;\n    height: $oceanHeight;\n    max-height: $oceanHeight;\n    background-size: $oceanWidth $oceanHeight;\n    background-repeat: no-repeat;\n    z-index: 0;\n\n\n    @content;\n   }\n  } */\n\n  /* //Smallest Landscape (just in case) \n  @mixin media($S-Screen-Width) {\n\n    @media screen and (min-width: $S-Screen-Width) and (orientation: landscape) {\n     $oceanWidth: $S-Screen-Width;\n     $oceanHeight: $S-Screen-Height;\n     \n     $islandWidth: $oceanWidth / 3; \n     $islandHeight: $oceanHeight / 3;\n     //for \"left\" position\n     $islandMiddleWidth: $oceanWidth / 2 - $islandWidth / 2;\n     //for \"top\" position\n     $islandMiddleHeight: $oceanHeight / 2 - $islandHeight / 1.5;\n     $sideGutters: $oceanWidth / 10;\n \n\n\n     \n  }\n     \n     @content;\n    }\n   \n  */\n\n//iphone 7 in Landscape\n@mixin media($phone-Portrait-Width) {\n\n   @media screen and (min-width: $phone-Portrait-Width) and (orientation: landscape) {\n    $oceanWidth: $phone-Landscape-Width;\n    $oceanHeight: $phone-Landscape-Height;\n\n    $myBreakpoint: $phone-Portrait-Width;\n\n  $vertRoadWidth: 19 / 839 * $myBreakpoint;\n  $vertRoadHeight: 70 / 756 * $myBreakpoint;\n\n  $setlWidth: 54 / 839 * $myBreakpoint;\n  $setlHeight: 53 / 756 * $myBreakpoint;\n\n  $cityWidth: 57 / 839 * $myBreakpoint;\n  $cityHeight: 70 / 756 * $myBreakpoint;\n\n  $diag-road-width: 67 / 839 * $myBreakpoint;\n  $diag-road-height: 45 / 756 * $myBreakpoint;\n\n  //HEIGHT of NODES\n  $nodeAHigh: 0 / 756 * $myBreakpoint; //   0vh;\n  $nodeALow: 30 / 756 * $myBreakpoint; //  30;\n  $nodeBHigh: 120 / 756 * $myBreakpoint; // 120;\n  $nodeBLow: 160 / 756 * $myBreakpoint; // 160;\n\n  $nodeCHigh: 240 / 756 * $myBreakpoint; // 240;\n  $nodeCLow: 300 / 756 * $myBreakpoint; // 300;\n  $nodeDHigh: 400 / 756 * $myBreakpoint; // 400;\n  $nodeDLow: 420 / 756 * $myBreakpoint; // 420;\n\n  $nodeEHigh: 500 / 756 * $myBreakpoint; // 500;\n  $nodeELow: 540 / 756 * $myBreakpoint; // 540;\n  $nodeFHigh: 650 / 756 * $myBreakpoint; // 650;\n  $nodeFLow: 680 / 756 * $myBreakpoint; // 680;\n\n  //HEIGHT Hypo ROADS\n  $road-A-hypo-Height: 34 / 756 * $myBreakpoint;\n  $road-B-hypo-Height: 167 / 756 * $myBreakpoint;\n  $road-C-hypo-Height: 300 / 756 * $myBreakpoint;\n  $road-D-hypo-Height: 428 / 756 * $myBreakpoint;\n  $road-E-hypo-Height: 547 / 756 * $myBreakpoint;\n  $road-F-hypo-Height: 686 / 756 * $myBreakpoint;\n\n  //HEIGHT VERT ROADS\n  $road-BA-vert-Height: 79 / 756 * $myBreakpoint;\n  $road-CB-vert-Height: 212 / 756 * $myBreakpoint;\n  $road-DC-vert-Height: 347 / 756 * $myBreakpoint;\n  $road-ED-vert-Height: 447 / 756 * $myBreakpoint;\n  $road-FE-vert-Height: 608 / 756 * $myBreakpoint;\n\n  //LEFT POSITION NODES;\n  //hypo equals diagonal road (hypotenuse)\n  $left-vert1: 0 / 839 * $myBreakpoint;\n  $left-hypo1: 25 / 839 * $myBreakpoint;\n  $left-vert2: 74 / 839 * $myBreakpoint;\n  $left-hypo2: 103 / 839 * $myBreakpoint;\n  $left-vert3: 159 / 839 * $myBreakpoint;\n  $left-hypo3: 183 / 839 * $myBreakpoint;\n  $left-vert4: 229 / 839 * $myBreakpoint;\n  $left-hypo4: 261 / 839 * $myBreakpoint;\n  $left-vert5: 302 / 839 * $myBreakpoint;\n  $left-hypo5: 337 / 839 * $myBreakpoint;\n  $left-vert6: 385 / 839 * $myBreakpoint;\n  $left-hypo6: 415 / 839 * $myBreakpoint;\n  $left-vert7: 470 / 839 * $myBreakpoint;\n  $left-hypo7: 487 / 839 * $myBreakpoint;\n  $left-vert8: 536 / 839 * $myBreakpoint;\n  $left-hypo8: 565 / 839 * $myBreakpoint;\n  $left-vert9: 608 / 839 * $myBreakpoint;\n  $left-hypo9: 643 / 839 * $myBreakpoint;\n  $left-vert10: 692 / 839 * $myBreakpoint;\n  $left-hypo10: 722 / 839 * $myBreakpoint;\n  $left-vert11: 782 / 839 * $myBreakpoint;\n    \n    \n\n    \n    @content;\n   }\n  }\n\n  \n  @mixin media($M-Screen-Width) {\n\n   @media screen and (min-width: $M-Screen-Width) {\n    $oceanWidth: $M-Screen-Width;\n    $oceanHeight: $M-Screen-Height;\n\n\n    $myBreakpoint: $M-Screen-Width;\n\n  $vertRoadWidth: 19 / 839 * $myBreakpoint;\n  $vertRoadHeight: 70 / 756 * $myBreakpoint;\n\n  $setlWidth: 54 / 839 * $myBreakpoint;\n  $setlHeight: 53 / 756 * $myBreakpoint;\n\n  $cityWidth: 57 / 839 * $myBreakpoint;\n  $cityHeight: 70 / 756 * $myBreakpoint;\n\n  $diag-road-width: 67 / 839 * $myBreakpoint;\n  $diag-road-height: 45 / 756 * $myBreakpoint;\n\n  //HEIGHT of NODES\n  $nodeAHigh: 0 / 756 * $myBreakpoint; //   0vh;\n  $nodeALow: 30 / 756 * $myBreakpoint; //  30;\n  $nodeBHigh: 120 / 756 * $myBreakpoint; // 120;\n  $nodeBLow: 160 / 756 * $myBreakpoint; // 160;\n\n  $nodeCHigh: 240 / 756 * $myBreakpoint; // 240;\n  $nodeCLow: 300 / 756 * $myBreakpoint; // 300;\n  $nodeDHigh: 400 / 756 * $myBreakpoint; // 400;\n  $nodeDLow: 420 / 756 * $myBreakpoint; // 420;\n\n  $nodeEHigh: 500 / 756 * $myBreakpoint; // 500;\n  $nodeELow: 540 / 756 * $myBreakpoint; // 540;\n  $nodeFHigh: 650 / 756 * $myBreakpoint; // 650;\n  $nodeFLow: 680 / 756 * $myBreakpoint; // 680;\n\n  //HEIGHT Hypo ROADS\n  $road-A-hypo-Height: 34 / 756 * $myBreakpoint;\n  $road-B-hypo-Height: 167 / 756 * $myBreakpoint;\n  $road-C-hypo-Height: 300 / 756 * $myBreakpoint;\n  $road-D-hypo-Height: 428 / 756 * $myBreakpoint;\n  $road-E-hypo-Height: 547 / 756 * $myBreakpoint;\n  $road-F-hypo-Height: 686 / 756 * $myBreakpoint;\n\n  //HEIGHT VERT ROADS\n  $road-BA-vert-Height: 79 / 756 * $myBreakpoint;\n  $road-CB-vert-Height: 212 / 756 * $myBreakpoint;\n  $road-DC-vert-Height: 347 / 756 * $myBreakpoint;\n  $road-ED-vert-Height: 447 / 756 * $myBreakpoint;\n  $road-FE-vert-Height: 608 / 756 * $myBreakpoint;\n\n  //LEFT POSITION NODES;\n  //hypo equals diagonal road (hypotenuse)\n  $left-vert1: 0 / 839 * $myBreakpoint;\n  $left-hypo1: 25 / 839 * $myBreakpoint;\n  $left-vert2: 74 / 839 * $myBreakpoint;\n  $left-hypo2: 103 / 839 * $myBreakpoint;\n  $left-vert3: 159 / 839 * $myBreakpoint;\n  $left-hypo3: 183 / 839 * $myBreakpoint;\n  $left-vert4: 229 / 839 * $myBreakpoint;\n  $left-hypo4: 261 / 839 * $myBreakpoint;\n  $left-vert5: 302 / 839 * $myBreakpoint;\n  $left-hypo5: 337 / 839 * $myBreakpoint;\n  $left-vert6: 385 / 839 * $myBreakpoint;\n  $left-hypo6: 415 / 839 * $myBreakpoint;\n  $left-vert7: 470 / 839 * $myBreakpoint;\n  $left-hypo7: 487 / 839 * $myBreakpoint;\n  $left-vert8: 536 / 839 * $myBreakpoint;\n  $left-hypo8: 565 / 839 * $myBreakpoint;\n  $left-vert9: 608 / 839 * $myBreakpoint;\n  $left-hypo9: 643 / 839 * $myBreakpoint;\n  $left-vert10: 692 / 839 * $myBreakpoint;\n  $left-hypo10: 722 / 839 * $myBreakpoint;\n  $left-vert11: 782 / 839 * $myBreakpoint;\n    \n    \n\n\n    @content;\n   }\n  }\n\n  @mixin media($L-Screen-Width) {\n\n   @media screen and (min-width: $L-Screen-Width) {\n    $oceanWidth: $L-Screen-Width;\n    $oceanHeight: $L-Screen-Height;\n   \n    $myBreakpoint: $L-Screen-Width;\n\n    $vertRoadWidth: 19 / 839 * $myBreakpoint;\n    $vertRoadHeight: 70 / 756 * $myBreakpoint;\n  \n    $setlWidth: 54 / 839 * $myBreakpoint;\n    $setlHeight: 53 / 756 * $myBreakpoint;\n  \n    $cityWidth: 57 / 839 * $myBreakpoint;\n    $cityHeight: 70 / 756 * $myBreakpoint;\n  \n    $diag-road-width: 67 / 839 * $myBreakpoint;\n    $diag-road-height: 45 / 756 * $myBreakpoint;\n  \n    //HEIGHT of NODES\n    $nodeAHigh: 0 / 756 * $myBreakpoint; //   0vh;\n    $nodeALow: 30 / 756 * $myBreakpoint; //  30;\n    $nodeBHigh: 120 / 756 * $myBreakpoint; // 120;\n    $nodeBLow: 160 / 756 * $myBreakpoint; // 160;\n  \n    $nodeCHigh: 240 / 756 * $myBreakpoint; // 240;\n    $nodeCLow: 300 / 756 * $myBreakpoint; // 300;\n    $nodeDHigh: 400 / 756 * $myBreakpoint; // 400;\n    $nodeDLow: 420 / 756 * $myBreakpoint; // 420;\n  \n    $nodeEHigh: 500 / 756 * $myBreakpoint; // 500;\n    $nodeELow: 540 / 756 * $myBreakpoint; // 540;\n    $nodeFHigh: 650 / 756 * $myBreakpoint; // 650;\n    $nodeFLow: 680 / 756 * $myBreakpoint; // 680;\n  \n    //HEIGHT Hypo ROADS\n    $road-A-hypo-Height: 34 / 756 * $myBreakpoint;\n    $road-B-hypo-Height: 167 / 756 * $myBreakpoint;\n    $road-C-hypo-Height: 300 / 756 * $myBreakpoint;\n    $road-D-hypo-Height: 428 / 756 * $myBreakpoint;\n    $road-E-hypo-Height: 547 / 756 * $myBreakpoint;\n    $road-F-hypo-Height: 686 / 756 * $myBreakpoint;\n  \n    //HEIGHT VERT ROADS\n    $road-BA-vert-Height: 79 / 756 * $myBreakpoint;\n    $road-CB-vert-Height: 212 / 756 * $myBreakpoint;\n    $road-DC-vert-Height: 347 / 756 * $myBreakpoint;\n    $road-ED-vert-Height: 447 / 756 * $myBreakpoint;\n    $road-FE-vert-Height: 608 / 756 * $myBreakpoint;\n  \n    //LEFT POSITION NODES;\n    //hypo equals diagonal road (hypotenuse)\n    $left-vert1: 0 / 839 * $myBreakpoint;\n    $left-hypo1: 25 / 839 * $myBreakpoint;\n    $left-vert2: 74 / 839 * $myBreakpoint;\n    $left-hypo2: 103 / 839 * $myBreakpoint;\n    $left-vert3: 159 / 839 * $myBreakpoint;\n    $left-hypo3: 183 / 839 * $myBreakpoint;\n    $left-vert4: 229 / 839 * $myBreakpoint;\n    $left-hypo4: 261 / 839 * $myBreakpoint;\n    $left-vert5: 302 / 839 * $myBreakpoint;\n    $left-hypo5: 337 / 839 * $myBreakpoint;\n    $left-vert6: 385 / 839 * $myBreakpoint;\n    $left-hypo6: 415 / 839 * $myBreakpoint;\n    $left-vert7: 470 / 839 * $myBreakpoint;\n    $left-hypo7: 487 / 839 * $myBreakpoint;\n    $left-vert8: 536 / 839 * $myBreakpoint;\n    $left-hypo8: 565 / 839 * $myBreakpoint;\n    $left-vert9: 608 / 839 * $myBreakpoint;\n    $left-hypo9: 643 / 839 * $myBreakpoint;\n    $left-vert10: 692 / 839 * $myBreakpoint;\n    $left-hypo10: 722 / 839 * $myBreakpoint;\n    $left-vert11: 782 / 839 * $myBreakpoint;\n    \n\n\n    @content;\n   }\n  }\n\n  @mixin media($XL-Screen-Width) {\n\n    @media screen and (min-width: $XL-Screen-Width) {\n      $oceanWidth: $XL-Screen-Width;\n    $oceanHeight: $XL-Screen-Height;\n    \n    $myBreakpoint: $XL-Screen-Width;\n\n    $vertRoadWidth: 19 / 839 * $myBreakpoint;\n    $vertRoadHeight: 70 / 756 * $myBreakpoint;\n  \n    $setlWidth: 54 / 839 * $myBreakpoint;\n    $setlHeight: 53 / 756 * $myBreakpoint;\n  \n    $cityWidth: 57 / 839 * $myBreakpoint;\n    $cityHeight: 70 / 756 * $myBreakpoint;\n  \n    $diag-road-width: 67 / 839 * $myBreakpoint;\n    $diag-road-height: 45 / 756 * $myBreakpoint;\n  \n    //HEIGHT of NODES\n    $nodeAHigh: 0 / 756 * $myBreakpoint; //   0vh;\n    $nodeALow: 30 / 756 * $myBreakpoint; //  30;\n    $nodeBHigh: 120 / 756 * $myBreakpoint; // 120;\n    $nodeBLow: 160 / 756 * $myBreakpoint; // 160;\n  \n    $nodeCHigh: 240 / 756 * $myBreakpoint; // 240;\n    $nodeCLow: 300 / 756 * $myBreakpoint; // 300;\n    $nodeDHigh: 400 / 756 * $myBreakpoint; // 400;\n    $nodeDLow: 420 / 756 * $myBreakpoint; // 420;\n  \n    $nodeEHigh: 500 / 756 * $myBreakpoint; // 500;\n    $nodeELow: 540 / 756 * $myBreakpoint; // 540;\n    $nodeFHigh: 650 / 756 * $myBreakpoint; // 650;\n    $nodeFLow: 680 / 756 * $myBreakpoint; // 680;\n  \n    //HEIGHT Hypo ROADS\n    $road-A-hypo-Height: 34 / 756 * $myBreakpoint;\n    $road-B-hypo-Height: 167 / 756 * $myBreakpoint;\n    $road-C-hypo-Height: 300 / 756 * $myBreakpoint;\n    $road-D-hypo-Height: 428 / 756 * $myBreakpoint;\n    $road-E-hypo-Height: 547 / 756 * $myBreakpoint;\n    $road-F-hypo-Height: 686 / 756 * $myBreakpoint;\n  \n    //HEIGHT VERT ROADS\n    $road-BA-vert-Height: 79 / 756 * $myBreakpoint;\n    $road-CB-vert-Height: 212 / 756 * $myBreakpoint;\n    $road-DC-vert-Height: 347 / 756 * $myBreakpoint;\n    $road-ED-vert-Height: 447 / 756 * $myBreakpoint;\n    $road-FE-vert-Height: 608 / 756 * $myBreakpoint;\n  \n    //LEFT POSITION NODES;\n    //hypo equals diagonal road (hypotenuse)\n    $left-vert1: 0 / 839 * $myBreakpoint;\n    $left-hypo1: 25 / 839 * $myBreakpoint;\n    $left-vert2: 74 / 839 * $myBreakpoint;\n    $left-hypo2: 103 / 839 * $myBreakpoint;\n    $left-vert3: 159 / 839 * $myBreakpoint;\n    $left-hypo3: 183 / 839 * $myBreakpoint;\n    $left-vert4: 229 / 839 * $myBreakpoint;\n    $left-hypo4: 261 / 839 * $myBreakpoint;\n    $left-vert5: 302 / 839 * $myBreakpoint;\n    $left-hypo5: 337 / 839 * $myBreakpoint;\n    $left-vert6: 385 / 839 * $myBreakpoint;\n    $left-hypo6: 415 / 839 * $myBreakpoint;\n    $left-vert7: 470 / 839 * $myBreakpoint;\n    $left-hypo7: 487 / 839 * $myBreakpoint;\n    $left-vert8: 536 / 839 * $myBreakpoint;\n    $left-hypo8: 565 / 839 * $myBreakpoint;\n    $left-vert9: 608 / 839 * $myBreakpoint;\n    $left-hypo9: 643 / 839 * $myBreakpoint;\n    $left-vert10: 692 / 839 * $myBreakpoint;\n    $left-hypo10: 722 / 839 * $myBreakpoint;\n    $left-vert11: 782 / 839 * $myBreakpoint;\n\n\n    @content;\n   }\n  };\n\n  \n\n\n\n","\n@use \"sass:math\";\n\n$myBreakpoint: 375px; // mobile-first\n  \n/* @mixin proportionsPawns($pawnMeasurement, $myBreakpoint) {\n */\n  $vertRoadWidth: 19 / 839 * $myBreakpoint;\n  $vertRoadHeight: 70 / 756 * $myBreakpoint;\n\n  $setlWidth: 54 / 839 * $myBreakpoint;\n  $setlHeight: 53 / 756 * $myBreakpoint;\n\n  $cityWidth: 57 / 839 * $myBreakpoint;\n  $cityHeight: 70 / 756 * $myBreakpoint;\n\n  $diag-road-width: 67 / 839 * $myBreakpoint;\n  $diag-road-height: 45 / 756 * $myBreakpoint;\n\n  //HEIGHT of NODES\n  $nodeAHigh: 0 / 756 * $myBreakpoint; //   0vh;\n  $nodeALow: 30 / 756 * $myBreakpoint; //  30;\n  $nodeBHigh: 120 / 756 * $myBreakpoint; // 120;\n  $nodeBLow: 160 / 756 * $myBreakpoint; // 160;\n\n  $nodeCHigh: 240 / 756 * $myBreakpoint; // 240;\n  $nodeCLow: 300 / 756 * $myBreakpoint; // 300;\n  $nodeDHigh: 400 / 756 * $myBreakpoint; // 400;\n  $nodeDLow: 420 / 756 * $myBreakpoint; // 420;\n\n  $nodeEHigh: 500 / 756 * $myBreakpoint; // 500;\n  $nodeELow: 540 / 756 * $myBreakpoint; // 540;\n  $nodeFHigh: 650 / 756 * $myBreakpoint; // 650;\n  $nodeFLow: 680 / 756 * $myBreakpoint; // 680;\n\n  //HEIGHT Hypo ROADS\n  $road-A-hypo-top: 34 / 756 * $myBreakpoint;\n  $road-B-hypo-top: 167 / 756 * $myBreakpoint;\n  $road-C-hypo-top: 300 / 756 * $myBreakpoint;\n  $road-D-hypo-top: 428 / 756 * $myBreakpoint;\n  $road-E-hypo-top: 547 / 756 * $myBreakpoint;\n  $road-F-hypo-top: 686 / 756 * $myBreakpoint;\n\n  //HEIGHT VERT ROADS\n  $road-BA-vert-top: 79 / 756 * $myBreakpoint;\n  $road-CB-vert-top: 212 / 756 * $myBreakpoint;\n  $road-DC-vert-top: 347 / 756 * $myBreakpoint;\n  $road-ED-vert-top: 447 / 756 * $myBreakpoint;\n  $road-FE-vert-top: 608 / 756 * $myBreakpoint;\n\n  //LEFT POSITION NODES;\n  //hypo equals diagonal road (hypotenuse)\n  $left-vert1: 0 / 839 * $myBreakpoint;\n  $left-hypo1: 25 / 839 * $myBreakpoint;\n  $left-vert2: 74 / 839 * $myBreakpoint;\n  $left-hypo2: 103 / 839 * $myBreakpoint;\n  $left-vert3: 159 / 839 * $myBreakpoint;\n  $left-hypo3: 183 / 839 * $myBreakpoint;\n  $left-vert4: 229 / 839 * $myBreakpoint;\n  $left-hypo4: 261 / 839 * $myBreakpoint;\n  $left-vert5: 302 / 839 * $myBreakpoint;\n  $left-hypo5: 337 / 839 * $myBreakpoint;\n  $left-vert6: 385 / 839 * $myBreakpoint;\n  $left-hypo6: 415 / 839 * $myBreakpoint;\n  $left-vert7: 470 / 839 * $myBreakpoint;\n  $left-hypo7: 487 / 839 * $myBreakpoint;\n  $left-vert8: 536 / 839 * $myBreakpoint;\n  $left-hypo8: 565 / 839 * $myBreakpoint;\n  $left-vert9: 608 / 839 * $myBreakpoint;\n  $left-hypo9: 643 / 839 * $myBreakpoint;\n  $left-vert10: 692 / 839 * $myBreakpoint;\n  $left-hypo10: 722 / 839 * $myBreakpoint;\n  $left-vert11: 782 / 839 * $myBreakpoint;\n/*   }\n */\n\n\n\n\n\n\n\n  /* \n  .allRoads *, .setlNode *, .cityNode * {\n  @include proportionsPawns(599px);\n  @include proportionsPawns(599px);\n  @include proportionsPawns(780px);\n  @include proportionsPawns(900px);\n  @include proportionsPawns(1200px);\n  @include proportionsPawns(1800px);\n} */\n/* \n\n  @media (max-width: 375px) and (orientation: portrait) {\n    @include proportionsPawns(599px);\n  };\n  @media (max-width: 599px) {\n    @include proportionsPawns(599px);\n  };\n  @media (max-width: 780px) {\n    @include proportionsPawns(780px);\n  };\n  @media (min-width: 900px) {\n    @include proportionsPawns(900px);\n  };\n  @media (min-width: 1200px) {\n    @include proportionsPawns(1200px);\n  };\n  @media (min-width: 1800px) {\n    @include proportionsPawns(1800px);\n  };\n\n\n\n\n\n\n\n*/\n\n/*\nmyBreakpoint stores the value for the 5 possible\nbreakpoints of the viewport.\nthese breakpoint values are also used as the \nmultiplier that determines the actual pawns height/width\n ratio.\n\n\n*/\n\n\n/*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n */\n  /* \n    $vertRoadWidth:    19 / 839 * $myBreakpoint;\n    $vertRoadHeight: 70 / 756 * $myBreakpoint;\n  \n    $setlWidth:  54 / 839 * $myBreakpoint;\n    $setlHeight: 53 / 756 * $myBreakpoint;\n  \n    $cityWidth:  57 / 839 * $myBreakpoint;\n    $cityHeight: 70 / 756 * $myBreakpoint;\n  \n    $diag-road-width:  67 / 839 * $myBreakpoint;\n    $diag-road-height: 45 / 756 * $myBreakpoint;\n  \n    //HEIGHT of NODES \n    $nodeAHigh:   0 / 756 * $myBreakpoint;//   0vh; \n    $nodeALow:   30 / 756 * $myBreakpoint;//  30;  \n    $nodeBHigh: 120 / 756 * $myBreakpoint;// 120;\n    $nodeBLow:  160 / 756 * $myBreakpoint;// 160; \n  \n    $nodeCHigh: 240 / 756 * $myBreakpoint;// 240;\n    $nodeCLow:  300 / 756 * $myBreakpoint;// 300;\n    $nodeDHigh: 400 / 756 * $myBreakpoint;// 400;\n    $nodeDLow:  420 / 756 * $myBreakpoint;// 420;\n  \n    $nodeEHigh: 500 / 756 * $myBreakpoint;// 500;\n    $nodeELow:  540 / 756 * $myBreakpoint;// 540;\n    $nodeFHigh: 650 / 756 * $myBreakpoint;// 650;  \n    $nodeFLow:  680 / 756 * $myBreakpoint;// 680;\n  \n    //HEIGHT Hypo ROADS \n    $road-A-hypo-top:   34 / 756 * $myBreakpoint;\n    $road-B-hypo-top:  167 / 756 * $myBreakpoint;\n    $road-C-hypo-top:  300 / 756 * $myBreakpoint;\n    $road-D-hypo-top:  428 / 756 * $myBreakpoint;\n    $road-E-hypo-top:  547 / 756 * $myBreakpoint;\n    $road-F-hypo-top:  686 / 756 * $myBreakpoint;\n          \n    \n      //HEIGHT VERT ROADS\n      $road-BA-vert-top:  79 / 756 * $myBreakpoint;\n      $road-CB-vert-top: 212 / 756 * $myBreakpoint;\n      $road-DC-vert-top: 347 / 756 * $myBreakpoint;\n      $road-ED-vert-top: 447 / 756 * $myBreakpoint;\n      $road-FE-vert-top: 608 / 756 * $myBreakpoint;\n  \n  \n  \n  //LEFT POSITION NODES;\n  //hypo equals diagonal road (hypotenuse)\n  $left-vert1:       0 / 839 * $myBreakpoint;\n  $left-hypo1:      25 / 839 * $myBreakpoint;\n  $left-vert2:      74 / 839 * $myBreakpoint;\n  $left-hypo2:     103 / 839 * $myBreakpoint;\n  $left-vert3:     159 / 839 * $myBreakpoint;\n  $left-hypo3:     183 / 839 * $myBreakpoint;\n  $left-vert4:     229 / 839 * $myBreakpoint;\n  $left-hypo4:     261 / 839 * $myBreakpoint;\n  $left-vert5:     302 / 839 * $myBreakpoint;\n  $left-hypo5:     337 / 839 * $myBreakpoint;\n  $left-vert6:     385 / 839 * $myBreakpoint;\n  $left-hypo6:     415 / 839 * $myBreakpoint;\n  $left-vert7:     470 / 839 * $myBreakpoint;\n  $left-hypo7:     487 / 839 * $myBreakpoint;\n  $left-vert8:     536 / 839 * $myBreakpoint;\n  $left-hypo8:     565 / 839 * $myBreakpoint;\n  $left-vert9:     608 / 839 * $myBreakpoint;\n  $left-hypo9:     643 / 839 * $myBreakpoint;\n  $left-vert10:    692 / 839 * $myBreakpoint;\n  $left-hypo10:    722 / 839 * $myBreakpoint;\n  $left-vert11:    782 / 839 * $myBreakpoint;\n  \n  \n\n\n */\n\n\n/* original dimensions assets\nsince we use regular hexagons\nif hexHeight is 1\nthen hexWidth is 0.86\nsettlement x49 y47\ncontainer rectangle city \nx51 y65 \nroad hypo x68 y49\nso diagonalroad/hypotenuse = h83.8\n    \n\n\n  road vert x19 y71\n  regular hexagon rules\n sides are equilateral  \n\n In the pointy orientation, \n a hexagon has width \n w = sqrt(3) * size \n and \n height \n h = 2 * size. \n The sqrt(3) comes from sin(60°).\n\n sizeHex = radius to all 6 angles\n width w = sqrt(3) //sqrt(3)\nheight h = 2 * size\n  */\n\n\n\n\n/*\nislandBackdropCropped has\n821 x 753\ntotal horizontaldocks = 45\ntotal verticaldocks = 43\n\ntotal pawnPlaceholders \nislandBackdropCropped - (vertical + horizontal docks)\n821 - 45 = 776w\n753 - 43 = 710h\n\nso once all calculations will be made for placeholders\nwe will apply this\nratiopawnPhtoIsland * 710/776\n\nthis also means that if \n    $diag-road-width: 67;\nand that if along the whole width there 10 \ndiagonal roads\nthen roughly 776 / 10 should be 67 which it isnt (77.6)\nbecause the roads are not meeting directly (nodes width overlap)\n\nlikewise vertical division by road is complicated \nas we have both vertical and diagonal roads\nhowever we can work backwards from and addition of the roads\n*/\n\n\n\n\n  \n\n  /* $roadWidthByDivision: $islandWidth / 10;\n  $roadHeightByDivision: $islandHeight / 10; */\n\n  \n  \n    \n/*     @debug math.hypot($diag-road-width, $diag-road-height); //80.7093550959\n/*      $hypotenuseRoad: math.hypot($diag-road-width, $diag-road-height); */\n\n    /*\n total height is 710 (after docks)\nthe full height possesses 6 diagonals in height\nand 5 verticals in height\n*/\n\n/*     @debug $islandHeight; //66.66vh    */\n/* @debug vert-road-height: \n($islandHeight - (6 * $diag-road-width)) / 5;\n *//* \n\n \n $stackedDiagRoadHeight: 6 * $diag-road-width;\n @debug $stackedDiagRoadHeight;\n $remainingVertRoadHeight: $islandHeight - $stackedDiagRoadHeight;\n @debug $remainingVertRoadHeight; */\n\n\n\n\n//Below is Math used to figure out max of fraction values:\n//////---------\n/* $totalPawnsWidth: $left-vert11 + $cityWidth;\n$totalPawnsHeight: $road-F-hypo-top + $cityHeight;\n@debug $totalPawnsWidth;\n@debug $totalPawnsHeight;\n */\n ///////-------\n\n\n\n\n\n\n/*  */\n\n/* @mixin hundredPercent() {\n  $totalWidthPawns:\n} */\n/* $totalIslandPawnWidth:  */ \n\n\n","@use './abstracts' as *;\n@use './abstracts/mediaqueries' as mq;\n@use './coordinates/_pawncoordinates' as pawncoords;\n\n\n/* @viewport { width: auto; }\n@media (max-width: 600px) {\n@viewport { width: 620px; }\n}\n */\n\n $coastalColor: #246892;\n $seaColor: #1e5f88;\n $oceanColor: #052d85;\n\nbody  {\n  background-color: $oceanColor;\n\n}\n\n\n\n#logHTML {\n  bottom: 0px;\n  background-color: lightgrey;\n  color: black;\n}\n\n.imageOcean {\n  $oceanWidth: 375px; //portrait mobile-first\n  $oceanHeight: 667px; //portrait mobile-first\n  $islandWidth: $oceanWidth / 3;\n  $islandHeight: $oceanHeight / 3;\n  //for \"left\" position\n  $islandMiddleWidth: $oceanWidth / 2 - $islandWidth / 2;\n  //for \"top\" position\n  $islandMiddleHeight: $oceanHeight / 2 - $islandHeight / 1.5;\n  $sideGutters: $oceanWidth / 10;\n\n  \n\n  position: relative;\n  \n\n\n\n\n  @include media($phone-Portrait-Width) {\n    width: $phone-Portrait-Width;\n    height: 667px;\n  background-image: radial-gradient(\n    $coastalColor 25%,\n    $seaColor 45%,\n    $oceanColor 80%\n  \n  );\n\n};\n\n  @include media($phone-Landscape-Width) {\n    width: $phone-Landscape-Width;\n    height: 375px; /* $S-Screen-Width */\n\n  background-image: radial-gradient(\n    $coastalColor 25%,\n    $seaColor 45%,\n    $oceanColor 80%\n  );\n  };\n\n  @include media($M-Screen-Width) {\n    width: $M-Screen-Width;\n    height: 1024px; /* $M-Screen-Width */\n\n  background-image: radial-gradient(\n    $coastalColor 25%,\n    $seaColor 45%,\n    $oceanColor 80%\n  );\n  };\n\n  @include media($L-Screen-Width) {\n    width: $L-Screen-Width;\n    height: 800px;\n\n  background-image: radial-gradient(\n    $coastalColor 25%,\n    $seaColor 45%,\n    $oceanColor 80%\n  );\n  };\n\n   @include media($XL-Screen-Width) {\n    width: $XL-Screen-Width;\n    height: 1200px;\n\n  background-image: radial-gradient(\n    $coastalColor 25%,\n    $seaColor 45%,\n    $oceanColor 80%\n  );\n   };\n\n\n\n  \n\n    .allPawnsPhParent {\n \n    } \n\n  div.hexNumbers {\n    /* \n        @include media($phone-Portrait-Width) ;\n        @include media($S-Screen-Width      );\n        @include media($M-Screen-Width      );\n        @include media($L-Screen-Width      );\n        @include media($XL-Screen-Width     );\n         */\n\n    /* margin: $sideGutters;\n    position: fixed;\n    top: -10px;\n    left: 100px;\n    width: $islandWidth;\n    background-size: $islandWidth $islandHeight; */\n\n    /*     left: $sideGutters;  \n     */\n  }\n\n  /* .tileContainer { */\n\n  /*  margin: $sideGutters;\n    \n        position: absolute;\n        min-width: $islandWidth;\n        max-width: $oceanWidth;\n        min-height: $islandHeight;\n        left: 50px;  \n        background-size: $islandWidth $islandHeight;\n        background-repeat: no-repeat; */\n\n  /* } */\n\n  /* .tradeShips {\n       \n        margin: $sideGutters;\n        } */\n\n} /* end imageOcean */\n\n\n\n.interface-overlay-wrapper {\n    background-color: orange;\n\n    @include media($phone-Portrait-Width) {\n        \n        background-color: rgb(251, 255, 0);\n    }\n\n    @include media($phone-Landscape-Width) {\n        background-color: rgb(223, 171, 58);\n    \n    }\n      \n    @include media($M-Screen-Width) {\n        background-color: rgb(223, 124, 58);\n    }\n      \n    @include media($L-Screen-Width) {\n        background-color: rgb(223, 83, 58);\n    }\n      \n    @include media($XL-Screen-Width) {\n        background-color: rgb(231, 42, 42);\n    }\n          \n  }\n\n#imageIsland {\n  background-image: url(\"../gameAssetsOfficial/islandBackdropCropped.png\");\n\n  @include media($phone-Portrait-Width) {\n        \n    background-color: rgb(251, 255, 0);\n}\n\n@include media($phone-Landscape-Width) {\n    background-color: rgb(223, 171, 58);\n\n}\n  \n@include media($M-Screen-Width) {\n    background-color: rgb(223, 124, 58);\n}\n  \n@include media($L-Screen-Width) {\n    background-color: rgb(223, 83, 58);\n}\n\n@include media($XL-Screen-Width) {\n  background-color: rgb(235, 41, 41);\n}\n\n}\n\n\n.measuringBox {\n  background-color: hotpink;\n  position: absolute;\n  top: 00px;\n  width: 200px;\n  height: 200px;\n}\n/* \n    First apply background cover   \n    821 × 753 px\n    for ratio in % : height / width * 100\n    753 / 821 * 100 = 91% (almost square image as 100% is square)\n    what we want to do is apply that percentage to padding-top (no height needed).\n     z-index: 3;\n}\n */\n\n .allPawnsPhParent {\n  .allPlaceholdersPawn {\n      \n\n\n\n  }\n\n}\n\n/* \n  \n.imageOcean {\n    #imageIsland {\n\n    }\n    \n    .hexNumbers {\nposition: absolute;\n    }\n    .tileContainer {\n\n    }\n    .tilePlaceholder {\n\n    }\n    .tradeShips {\n\n    }\n}\n */\n"]}